// SafeArgs code
	//In Fragment 1
	binding.button.setOnClickListener {
            it.findNavController().navigate(FirstFragmentDirections.actionFirstFragmentToSecondFragment("Your argument has been passed!"))
        }
	// In Fragment 2
	var args = SecondFragmentArgs.fromBundle(arguments!!)
        Toast.makeText(context, args.message,Toast.LENGTH_LONG).show()



// DataBinding in Fragment
	val binding : FragmentFirstBinding = DataBindingUtil.inflate(inflater,R.layout.fragment_second,container,false)
	return binding.root




// DataBinding in Activity
	private lateinit var binding : ActivityMainBinding

	binding = DataBindingUtil.setContentView(this,R.layout.activity_main)




// Navigate from menu to fragment
	R.id.aboutFragment -> {
                navController.navigate(R.id.aboutFragment)
                true}



//Navigate from Fragment to another Fragment
	it.findNavController().navigate(
                FirstFragmentDirections.actionFirstFragmentToSecondFragment())


// Navigate from Fragment to Activity (put an arrow from fragment to activity in navigation graph)
	binding.textView.setOnClickListener{
           it.findNavController().navigate(HomeFragmentDirections.actionHomeFragmentToMain2Activity())
        }

// Navigate from activity to another

binding.button.setOnClickListener {
            startActivity(Intent(this, Main2Activity::class.java))
        }


// setUpNavigation
	private lateinit var navController : NavController

	navController = Navigation.findNavController(this, R.id.myNavHostFragment)



// Up button
	NavigationUI.setupActionBarWithNavController(this, navController)
	
	override fun onSupportNavigateUp(): Boolean {
        val navController = this.findNavController(R.id.myNavHostFragment)
        return navController.navigateUp()
    	}

// add color to navigation bar
	<item name="android:navigationBarColor">@color/primary_dark</item>



// Splash Activity
	// in styles
  		<style name="Fullscreen" parent="Theme.AppCompat.Light.DarkActionBar">
    		<item name="windowActionBar">false</item>
    		<item name="windowNoTitle">true</item>
    		<item name="android:windowFullscreen">true</item>
  		</style>
	// in splashActivity.kt
		class SplashActivity : AppCompatActivity() {
    		override fun onCreate(savedInstanceState: Bundle?) {
        	super.onCreate(savedInstanceState)
        	setContentView(R.layout.activity_splash)
        	thread {
            	Thread.sleep((3 * 1000).toLong())
            	startMainActivity()
        	}.priority = Thread.NORM_PRIORITY
    		}
    		private fun startMainActivity() {
        	val intent = Intent(applicationContext, MainActivity::class.java)
        	startActivity(intent)
        	finish()
    		}
		}
	// in manifest.xml
	 <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
         </intent-filter>
	


// Add snackbar
	Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG).setAction("Action", null).show()


// Add animation for navigation in code
	val options = navOptions {
            anim {
                enter = R.anim.slide_in_right
                exit = R.anim.slide_out_left
                popEnter = R.anim.slide_in_left
                popExit = R.anim.slide_out_right
            }
        }
        binding.button.setOnClickListener {
            it.findNavController().navigate(R.id.stepOneFragment, null, options)
        }

